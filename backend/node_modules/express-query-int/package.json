{
  "_args": [
    [
      {
        "raw": "express-query-int@^1.0.1",
        "scope": null,
        "escapedName": "express-query-int",
        "name": "express-query-int",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/home/philipe/Projects/FundamentosMEAN/CursoFramesWeb/backend"
    ]
  ],
  "_from": "express-query-int@>=1.0.1 <2.0.0",
  "_id": "express-query-int@1.0.1",
  "_inCache": true,
  "_location": "/express-query-int",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "mariusc23",
    "email": "marius@craciunoiu.net"
  },
  "_npmVersion": "2.7.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-query-int@^1.0.1",
    "scope": null,
    "escapedName": "express-query-int",
    "name": "express-query-int",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-query-int/-/express-query-int-1.0.1.tgz",
  "_shasum": "5cff80adc63de2641db07bf5f816b81cca9515cd",
  "_shrinkwrap": null,
  "_spec": "express-query-int@^1.0.1",
  "_where": "/home/philipe/Projects/FundamentosMEAN/CursoFramesWeb/backend",
  "author": {
    "name": "Marius Craciunoiu",
    "url": "http://www.mariusc23.com/"
  },
  "bugs": {
    "url": "https://github.com/mariusc23/express-query-int/issues"
  },
  "dependencies": {},
  "description": "Convert query strings to numbers for express/connect applications.",
  "devDependencies": {
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-contrib-nodeunit": "^0.4.1",
    "jshint-stylish": "^1.0.1",
    "load-grunt-tasks": "^3.1.0"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "5cff80adc63de2641db07bf5f816b81cca9515cd",
    "tarball": "https://registry.npmjs.org/express-query-int/-/express-query-int-1.0.1.tgz"
  },
  "gitHead": "e36b68dc1deed99c8bac37c644a23882c3c560c2",
  "homepage": "https://github.com/mariusc23/express-query-int",
  "keywords": [
    "express",
    "connect",
    "query",
    "qs",
    "parseInt",
    "parseFloat"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mariusc23",
      "email": "marius@craciunoiu.net"
    }
  ],
  "name": "express-query-int",
  "optionalDependencies": {},
  "readme": "express-query-int\n=================\n\n> Convert query strings to numbers for express/connect applications.\n\n[![npm](https://img.shields.io/npm/v/express-query-int.svg)](https://www.npmjs.com/package/express-query-int)\n[![build status](https://travis-ci.org/mariusc23/express-query-int.svg)](https://travis-ci.org/mariusc23/express-query-int)\n\n## Installation\n\n    npm install --save express-query-int\n\n\n## Getting Started\nThe module will recursively attempt to parse every property in `req.query`.\n\nLoad it right after the `bodyParser`:\n\n```js\nvar queryParser = require('express-query-int');\n\n// [...]\n\napp.use(bodyParser.json());\napp.use(queryParser());\n```\n\n#### Without\n```js\n// ?a=1&b[c]=2\nconsole.log(req.query);\n// => { a: '4', b: { c: '2' } }\n```\n\n#### With\n```js\n// ?a=1&b[c]=2\nconsole.log(req.query);\n// => { a: 4, b: { c: 2 } }\n```\n\n### Floating Point\nBy default the parser will use `parseInt` to convert numbers. You can use `parseFloat` or your own function.\n\n```js\napp.use(queryParser({\n  parser: parseFloat\n}));\n```\n\n### Custom Parser\nProvide a function that takes two arguments:\n\n- `value`: a string potentially representing a number\n- `radix`: 10\n- `name` : a name of query argument\n\n```js\napp.use(queryParser({\n  parser: function(value, radix, name) {\n    if (true) {\n      return modifiedValue;\n    }\n    else {\n      return NaN;\n    }\n  }\n}));\n```\n\n## License\nCopyright (c) 2015 Marius Craciunoiu. Licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mariusc23/express-query-int.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.0.1"
}
